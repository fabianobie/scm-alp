<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!-- Generated 19/01/2010 11:40:23 by Hibernate Tools 3.2.5.Beta -->
<hibernate-mapping>

<class
    name="br.com.linkdata.entity.UnidadeMedidaPossivelMaterial"
    table="UNIDADE_POSSIVEL_MATERIAL"
>
  <meta attribute="implements" inherit="false">Comparable<UnidadeMedidaPossivelMaterial></meta>
  <meta attribute="class-code" inherit="false">
	public UnidadeMedidaPossivelMaterial() {
	
	}
	public UnidadeMedidaPossivelMaterial(Material material,
			UnidadeMedida unidadeMedida, Boolean isUnidadeEntrada) {
		this.getId().setIdMaterial(material.getId());
		this.getId().setIdUnidadeMedida(unidadeMedida.getId());
		this.getId().setIsUnidadeEntrada(isUnidadeEntrada);
		this.material = material;
		this.unidadeMedida = unidadeMedida;
		if(isUnidadeEntrada){
			material.getUnidadesPossiveisEntrada().add(this);
		}
		else{
			material.getUnidadesPossiveisSaida().add(this);
		}
		unidadeMedida.getUnidadesPossiveis().add(this);
	}
	
	@Override
	public int compareTo(UnidadeMedidaPossivelMaterial o) {
		 String desc1 = unidadeMedida.getDescricao() + (getIsUnidadeEntrada() ==
		 true ? "1" : "2");
		 String desc2 = o.getUnidadeMedida().getDescricao() +
		 (o.getIsUnidadeEntrada() == true ? "1" : "2");
		 return desc1.compareTo(desc2);
	}

	@Override
	public boolean equals(Object obj) {
		return super.equals(obj);
	}
	
	@Transient
	public Boolean getIsUnidadeEntrada() {
		return getId().getIsUnidadeEntrada();
	}
	</meta>
  <meta attribute="extra-import" inherit="false">javax.persistence.Transient</meta>

    <composite-id
		name="id"
        class="br.com.linkdata.entity.UnidadeMedidaPossivelMaterialId"
        access="field"
    >		
	        <key-property name="idMaterial" type="java.lang.Long">
<column name="ID_MATERIAL" />
	        </key-property>
	        <key-property name="idUnidadeMedida" type="java.lang.Long">
<column name="ID_UNIDADE_MEDIDA" />
	        </key-property>
	        <key-property name="isUnidadeEntrada" type="java.lang.Boolean">
<column name="IND_ENTRADA" />
	        </key-property>
    </composite-id>	




    <many-to-one
	    name="material"
	    class="br.com.linkdata.entity.Material"
	    
        update="false"
        insert="false"
        access="field"
        fetch="join"
    >
  <meta attribute="class-code" inherit="false">
	public UnidadeMedidaPossivelMaterial() {
	
	}
	public UnidadeMedidaPossivelMaterial(Material material,
			UnidadeMedida unidadeMedida, Boolean isUnidadeEntrada) {
		this.getId().setIdMaterial(material.getId());
		this.getId().setIdUnidadeMedida(unidadeMedida.getId());
		this.getId().setIsUnidadeEntrada(isUnidadeEntrada);
		this.material = material;
		this.unidadeMedida = unidadeMedida;
		if(isUnidadeEntrada){
			material.getUnidadesPossiveisEntrada().add(this);
		}
		else{
			material.getUnidadesPossiveisSaida().add(this);
		}
		unidadeMedida.getUnidadesPossiveis().add(this);
	}
	
	@Override
	public int compareTo(UnidadeMedidaPossivelMaterial o) {
		 String desc1 = unidadeMedida.getDescricao() + (getIsUnidadeEntrada() ==
		 true ? "1" : "2");
		 String desc2 = o.getUnidadeMedida().getDescricao() +
		 (o.getIsUnidadeEntrada() == true ? "1" : "2");
		 return desc1.compareTo(desc2);
	}

	@Override
	public boolean equals(Object obj) {
		return super.equals(obj);
	}
	
	@Transient
	public Boolean getIsUnidadeEntrada() {
		return getId().getIsUnidadeEntrada();
	}
	</meta>
  <meta attribute="implements" inherit="false">Comparable<UnidadeMedidaPossivelMaterial></meta>
  <meta attribute="extra-import" inherit="false">javax.persistence.Transient</meta>
<column name="ID_MATERIAL" />
   </many-to-one>
    <property
        name="padrao"
	    type="java.lang.Boolean"
        access="field"
    >
  <meta attribute="class-code" inherit="false">
	public UnidadeMedidaPossivelMaterial() {
	
	}
	public UnidadeMedidaPossivelMaterial(Material material,
			UnidadeMedida unidadeMedida, Boolean isUnidadeEntrada) {
		this.getId().setIdMaterial(material.getId());
		this.getId().setIdUnidadeMedida(unidadeMedida.getId());
		this.getId().setIsUnidadeEntrada(isUnidadeEntrada);
		this.material = material;
		this.unidadeMedida = unidadeMedida;
		if(isUnidadeEntrada){
			material.getUnidadesPossiveisEntrada().add(this);
		}
		else{
			material.getUnidadesPossiveisSaida().add(this);
		}
		unidadeMedida.getUnidadesPossiveis().add(this);
	}
	
	@Override
	public int compareTo(UnidadeMedidaPossivelMaterial o) {
		 String desc1 = unidadeMedida.getDescricao() + (getIsUnidadeEntrada() ==
		 true ? "1" : "2");
		 String desc2 = o.getUnidadeMedida().getDescricao() +
		 (o.getIsUnidadeEntrada() == true ? "1" : "2");
		 return desc1.compareTo(desc2);
	}

	@Override
	public boolean equals(Object obj) {
		return super.equals(obj);
	}
	
	@Transient
	public Boolean getIsUnidadeEntrada() {
		return getId().getIsUnidadeEntrada();
	}
	</meta>
  <meta attribute="implements" inherit="false">Comparable<UnidadeMedidaPossivelMaterial></meta>
  <meta attribute="extra-import" inherit="false">javax.persistence.Transient</meta>
<column name="IN_PADRAO" />
  </property>

    <many-to-one
	    name="unidadeMedida"
	    class="br.com.linkdata.entity.UnidadeMedida"
	    
        update="false"
        insert="false"
        access="field"
        fetch="join"
    >
  <meta attribute="class-code" inherit="false">
	public UnidadeMedidaPossivelMaterial() {
	
	}
	public UnidadeMedidaPossivelMaterial(Material material,
			UnidadeMedida unidadeMedida, Boolean isUnidadeEntrada) {
		this.getId().setIdMaterial(material.getId());
		this.getId().setIdUnidadeMedida(unidadeMedida.getId());
		this.getId().setIsUnidadeEntrada(isUnidadeEntrada);
		this.material = material;
		this.unidadeMedida = unidadeMedida;
		if(isUnidadeEntrada){
			material.getUnidadesPossiveisEntrada().add(this);
		}
		else{
			material.getUnidadesPossiveisSaida().add(this);
		}
		unidadeMedida.getUnidadesPossiveis().add(this);
	}
	
	@Override
	public int compareTo(UnidadeMedidaPossivelMaterial o) {
		 String desc1 = unidadeMedida.getDescricao() + (getIsUnidadeEntrada() ==
		 true ? "1" : "2");
		 String desc2 = o.getUnidadeMedida().getDescricao() +
		 (o.getIsUnidadeEntrada() == true ? "1" : "2");
		 return desc1.compareTo(desc2);
	}

	@Override
	public boolean equals(Object obj) {
		return super.equals(obj);
	}
	
	@Transient
	public Boolean getIsUnidadeEntrada() {
		return getId().getIsUnidadeEntrada();
	}
	</meta>
  <meta attribute="implements" inherit="false">Comparable<UnidadeMedidaPossivelMaterial></meta>
  <meta attribute="extra-import" inherit="false">javax.persistence.Transient</meta>
<column name="ID_UNIDADE_MEDIDA" />
   </many-to-one>

</class>

</hibernate-mapping>