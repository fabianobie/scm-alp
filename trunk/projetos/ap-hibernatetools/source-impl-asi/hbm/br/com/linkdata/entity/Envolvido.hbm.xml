<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 23/12/2009 11:50:13 by Hibernate Tools 3.2.5.Beta -->
<hibernate-mapping>
	<meta attribute="extra-import">java.io.Serializable</meta>
	<meta attribute="class-code">
	/**
	 * Classe que representa o ID da entidade em questão.
	 */
	public static class Id implements Serializable {

		@Column(name = "ID_CONVERSA")
		private Long idConversa;

		@Column(name = "ID_USUARIO")
		private Long idUsuario;

		public Id() {
		}

		public Id(Long idConversa, Long idUsuario) {
			this.idConversa = idConversa;
			this.idUsuario = idUsuario;
		}

		public boolean equals(Object o) {
			if (o != null &amp;&amp; o instanceof Id) {
				Id objeto = (Id) o;
				return this.idConversa.equals(objeto.idConversa)
						&amp;&amp; this.idUsuario.equals(objeto.idUsuario);
			} else {
				return false;
			}
		}

		public int hashCode() {
			return idUsuario.hashCode() + idConversa.hashCode();
		}

		/**
		 * Este método insere o ID da conversa persistido na Envolvido, foi
		 * criado pois o hibernate não controla a inclusão deste objeto via
		 * CASCADE, o ID da conversa deve ser setado manualmente após a inclusão
		 * da conversa.
		 * 
		 * @param idConversa
		 */
		public void setIdConversa(Long idConversa) {
			this.idConversa = idConversa;
		}
	}
	</meta>
    <class name="br.com.linkdata.entity.Envolvido" table="ENVOLVIDO_CONVERSA">
        <composite-id name="id" class="br.com.linkdata.entity.Envolvido$Id" access="field">
            <key-property name="idConversa" type="java.lang.Long">
                <column name="ID_CONVERSA" />
            </key-property>
            <key-property name="idUsuario" type="java.lang.Long">
                <column name="ID_USUARIO" />
            </key-property>
        </composite-id>
        <many-to-one name="conversa" class="br.com.linkdata.entity.Conversa" update="false" insert="false" access="field" fetch="join">
            <column name="ID_CONVERSA" />
        </many-to-one>
        <property name="isArquivado" type="java.lang.Boolean" access="field">
            <column name="IND_ARQUIVADO" not-null="true" />
        </property>
        <property name="isLido" type="java.lang.Boolean" access="field">
            <column name="IND_LEITURA" not-null="true" />
        </property>
        <many-to-one name="usuario" class="br.com.linkdata.entity.Usuario" update="false" insert="false" access="field" fetch="join">
            <column name="ID_USUARIO" />
        </many-to-one>
    </class>
</hibernate-mapping>
